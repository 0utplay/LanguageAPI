plugins {
    id "com.github.johnrengelman.shadow" version "7.0.0"
}

ext.shortVersion = '2.0-SNAPSHOT'

allprojects {
    group = 'de.tentact.languageapi'
    version = '2.0-SNAPSHOT-' + getCurrentShortRevision()
}

def getCurrentShortRevision() {
    new ByteArrayOutputStream().withStream { os ->
        exec {
            executable = "git"
            args = ["rev-parse", "HEAD"]
            standardOutput = os
        }
        return os.toString().trim().substring(0, 8)
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'maven-publish'
    apply plugin: 'java-library'
    apply plugin: 'com.github.johnrengelman.shadow'

    repositories {
        mavenLocal()
        maven {
            url = uri('https://repo.maven.apache.org/maven2')
        }

        maven {
            url = uri('https://repo.dmulloy2.net/nexus/repository/public/')
        }

        maven {
            url = uri('https://hub.spigotmc.org/nexus/content/repositories/snapshots/')
        }

        maven {
            url = uri('https://jitpack.io')
        }

        maven {
            url = uri('https://libraries.minecraft.net/')
        }

        maven {
            url = uri('https://oss.sonatype.org/content/repositories/snapshots')
        }

        maven {
            url = uri('https://repo.velocitypowered.com/releases/')
        }
    }

    sourceCompatibility = '8'

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }

    shadowJar {
        archiveFileName.set(project.name+"-"+shortVersion)
    }

    if (project.name == 'Examples') return

    java {
        withJavadocJar()
        withSourcesJar()
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java
            }
        }

        repositories {
            maven {
                def releasesRepoUrl = 'https://archiva.tentact.de/repository/tentact-release/'
                def snapshotsRepoUrl = 'https://archiva.tentact.de/repository/tentact-snapshot/'
                url = shortVersion.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl

                credentials {
                    username = System.getenv("MAVEN_USERNAME")
                    password = System.getenv("MAVEN_PASSWORD")
                }
            }
        }
    }
}
